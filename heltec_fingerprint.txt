#include <WiFi.h>
#include <FirebaseESP32.h>
#include <SPI.h>
#include <LoRa.h>


#define FIREBASE_HOST "XXXXXXXXXXXX" //Do not include https:// in FIREBASE_HOST
#define FIREBASE_AUTH "XXXXXXXXXXXXXX"
#define WIFI_SSID "XXXXXXXXXXXX"
#define WIFI_PASSWORD "XXXXXXXXXXXXX"

//Define FirebaseESP32 data object
FirebaseData firebaseData;




void setup()
{

  Serial.begin(115200);

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();

  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  Firebase.reconnectWiFi(true);

  //Set database read timeout to 1 minute (max 15 minutes)
  Firebase.setReadTimeout(firebaseData, 1000 * 60);
  //tiny, small, medium, large and unlimited.
  //Size and its write timeout e.g. tiny (1s), small (10s), medium (30s) and large (60s).
  Firebase.setwriteSizeLimit(firebaseData, "tiny");
    



  Serial.println("LoRa Receiver Callback");

 SPI.begin(5,19,27,18);
  LoRa.setPins(18,14,26);

  if (!LoRa.begin(433E6)) {
    Serial.println("Starting LoRa failed!");
    while (1);
  }

 

} 
  

void loop()
{
String fireStatus;
int cmd=2;
String status;
Firebase.getString(firebaseData,"fingerprint/AUTH_STATUS",fireStatus);
status=fireStatus.substring(2,9);
Serial.println(status);
Serial.println(fireStatus);
if(status=="SUCCESS")
{
cmd=1;
Serial.println("Authorisation successful");
}
else if(status=="FAILURE")
{
  cmd=0;
  Serial.println("Authorisation failed");
}

Serial.print("Sending packet: ");
  Serial.println(cmd);

  // send packet
  LoRa.beginPacket();
  LoRa.print(cmd);
  LoRa.endPacket();


delay(1000);
 
 
}
  
                            